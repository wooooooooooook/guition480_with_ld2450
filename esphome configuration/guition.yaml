## 이 구성에 사용되는 secrets는 다음과 같습니다.
## !secret encryption_key
## !secret ota_password
## !secret wifi_ssid
## !secret wifi_password
## !secret fallback_password

substitutions:
  name: "guition-esp32-s3-4848s040"
  friendly_name: "Guition480-basic"
  wifi_fallback_ssid: "Guitionv1 Fallback Hotspot"
  device_description: "Guition ESP32-S3-4848S040 480*480 Smart Screen"

# 디스플레이에 표시될 이름과 아이콘
  light_1_display_name: "Light1"
  light_1_icon: $mdi_lightbulb
  light_2_display_name: "Light2"
  light_2_icon: $mdi_lightbulb
  light_3_display_name: "Light3"
  light_3_icon: $mdi_lightbulb
  custom_switch_1_display_name: "Switch1"
  custom_switch_1_icon: $mdi_lamp
  custom_switch_2_display_name: "Switch2"
  custom_switch_2_icon: $mdi_lamp
  custom_switch_3_display_name: "Switch3"
  custom_switch_3_icon: $mdi_lamp

# 사용할 아이콘을 아래와 font: 섹션에 각각 추가하세요요
# mdi icons http://materialdesignicons.com/cdn/7.4.47/
  mdi_lightbulb: "\U000F0335"
  mdi_radar: "\U000F0437"
  mdi_chevron_double_left: "\U000F013D"
  mdi_lamp: "\U000F06B5"
  mdi_curtains: "\U000F1846"

# web_server:
#   port: 80
#   version: 3

color:
  # Create a Home Assistant blue color
  - id: ha_blue
    hex: 51c0f2

#-------------------------------------------
# Fonts
#-------------------------------------------
font:
  - file: "gfonts://Roboto"
    id: roboto24
    size: 24
    bpp: 4

  - file: "fonts/materialdesignicons-webfont.ttf" # http://materialdesignicons.com/cdn/7.4.47/
    id: light40
    size: 40
    bpp: 4
    glyphs: [
        "\U000F0335", # mdi_mdi_lightbulb
        "\U000F0437", # mdi_radar
        "\U000F013D", # mdi_chevron_double_left
        "\U000F06B5", # mdi_lamp
        "\U000F1846", # mid_curtains
      ]
      
esphome:
  name: "${name}"
  friendly_name: "${friendly_name}"
  #name_add_mac_suffix: true
  platformio_options:
    board_build.flash_mode: dio
  on_boot:
    priority: 600
    then:
      - lvgl.widget.hide:
          - id: target1_obj
      - lvgl.widget.hide:
          - id: target2_obj
      - lvgl.widget.hide:
          - id: target3_obj

esp32:
  board: esp32-s3-devkitc-1
  variant: esp32s3
  flash_size: 16MB
  framework:
    type: esp-idf
    sdkconfig_options:
      COMPILER_OPTIMIZATION_SIZE: y
      CONFIG_ESP32S3_DEFAULT_CPU_FREQ_240: "y"
      CONFIG_ESP32S3_DATA_CACHE_64KB: "y"
      CONFIG_ESP32S3_DATA_CACHE_LINE_64B: "y"
      CONFIG_SPIRAM_FETCH_INSTRUCTIONS: y
      CONFIG_SPIRAM_RODATA: y

## 블루투스스와 LD2450는 성능상 동시에 사용이 불가. 동시에 활성화할경우 OTA접속이 불가해질 수 있으니 주의.
# esp32_ble_tracker:
#   scan_parameters:
#     window: 30ms
#     interval: 100ms
# bluetooth_proxy:

psram:
  mode: octal
  speed: 80MHz

# Enable logging
logger:
  hardware_uart: "UART1" # UART0 will be used by LD2450
  level: INFO
  # baud_rate: 0 

# Enable Home Assistant API
api:
  encryption:
    key: !secret encryption_key

ota:
  - platform: esphome
    id: my_ota
    password: !secret ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  fast_connect: True

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "${wifi_fallback_ssid}"
    password: !secret fallback_password


time:
  - platform: homeassistant
    id: time_comp
    on_time_sync:
      - script.execute: time_update
    on_time:
      - minutes: '*'
        seconds: 0
        then:
          - script.execute: time_update

script:
  - id: wake_up_display
    then:
      - if:
          condition: lvgl.is_paused
          then:
            - light.turn_on: backlight
            - lvgl.resume:
            - lvgl.widget.redraw:
  - id: wake_up_display_on_approaching
    then:
      - if:
          condition:
            any:
              - sensor.in_range:
                  id: target_1_distance
                  above: 1
                  below: 2000
              - sensor.in_range:
                  id: target_2_distance
                  above: 1
                  below: 2000
              - sensor.in_range:
                  id: target_3_distance
                  above: 1
                  below: 2000
          then:
            - script.execute: wake_up_display
  - id: time_update
    # update the clock display
    then:
      - lvgl.indicator.update:
          id: minute_hand
          value: !lambda |-
            return id(time_comp).now().minute;
      - lvgl.indicator.update:
          id: hour_hand
          value: !lambda |-
            auto now = id(time_comp).now();
            return std::fmod(now.hour, 12) * 60 + now.minute;
      - lvgl.label.update:
          id: date_label
          text: !lambda |-
            static const char * const mon_names[] = {"JAN", "FEB", "MAR", "APR", "MAY", "JUN", "JUL", "AUG", "SEP", "OCT", "NOV", "DEC"};
            static char date_buf[8];
            auto now = id(time_comp).now();
            snprintf(date_buf, sizeof(date_buf), "%s %2d", mon_names[now.month-1], now.day_of_month);
            return date_buf;
      - lvgl.label.update:
          id: day_label
          text: !lambda |-
            static const char * const day_names[] = {"SUN", "MON", "TUE", "WED", "THU", "FRI", "SAT"};
            return day_names[id(time_comp).now().day_of_week - 1];  

  - id: update_radar_targets
    then:
      - if:
          condition: 
            lambda: 'return id(target_1_y).state > 0 ;'
          then:
            - lvgl.widget.show:
              - id: target1_obj
            - lvgl.widget.update:
                id: target1_obj
                translate_x: !lambda |-
                  if (id(target_1_x).has_state()) {
                    return (id(target_1_x).state / 6000.0 * 450);
                  }
                  return 0;
                translate_y: !lambda |-
                  if (id(target_1_y).has_state()) {
                    return (id(target_1_y).state / 6000.0 * 450);
                  }
                  return 0;
          else:
            - lvgl.widget.hide:
              - id: target1_obj
      - if:
          condition: 
            lambda: 'return id(target_2_y).state > 0 ;'
          then:
            - lvgl.widget.show:
              - id: target2_obj
            - lvgl.widget.update:
                id: target2_obj
                translate_x: !lambda |-
                  if (id(target_2_x).has_state()) {
                    return (id(target_2_x).state / 6000.0 * 450);
                  }
                  return 0;
                translate_y: !lambda |-
                  if (id(target_2_y).has_state()) {
                    return (id(target_2_y).state / 6000.0 * 450);
                  }
                  return 0;
          else:
            - lvgl.widget.hide:
              - id: target2_obj
      - if:
          condition: 
            lambda: 'return id(target_3_y).state > 0 ;'
          then:
            - lvgl.widget.show:
              - id: target3_obj
            - lvgl.widget.update:
                id: target3_obj
                translate_x: !lambda |-
                  if (id(target_3_x).has_state()) {
                    return (id(target_3_x).state / 6000.0 * 450);
                  }
                  return 0;
                translate_y: !lambda |-
                  if (id(target_3_y).has_state()) {
                    return (id(target_3_y).state / 6000.0 * 450);
                  }
                  return 0;
          else:
            - lvgl.widget.hide:
              - id: target3_obj
  - id: update_target1_distance
    then:
      - lvgl.label.update:
          id: target1_obj_distance
          text: !lambda |-
            if (id(target_1_distance).has_state()) {
              char buf[10];
              snprintf(buf, sizeof(buf), "%.1fm", id(target_1_distance).state / 1000.0);
              return std::string(buf);
            }
            return "---";
  - id: update_target2_distance
    then:
      - lvgl.label.update:
          id: target2_obj_distance
          text: !lambda |-
            if (id(target_2_distance).has_state()) {
              char buf[10];
              snprintf(buf, sizeof(buf), "%.1fm", id(target_2_distance).state / 1000.0);
              return std::string(buf);
            }
            return "---";
  - id: update_target3_distance
    then:
      - lvgl.label.update:
          id: target3_obj_distance
          text: !lambda |-
            if (id(target_3_distance).has_state()) {
              char buf[10];
              snprintf(buf, sizeof(buf), "%.1fm", id(target_3_distance).state / 1000.0);
              return std::string(buf);
            }
            return "---";

captive_portal:

sensor:
  - platform: wifi_signal
    name: "WiFi Signal"
    id: wifi_signal_db
    update_interval: 60s
    entity_category: diagnostic
    internal: true

  # Reports the WiFi signal strength in %
  - platform: copy
    source_id: wifi_signal_db
    name: "WiFi Strength"
    filters:
      - lambda: return min(max(2 * (x + 100.0), 0.0), 100.0);
    unit_of_measurement: "%"
    entity_category: diagnostic

  - platform: ld2450
    ld2450_id: ld2450_radar
    target_count:
      name: Presence Target Count
    still_target_count:
      name: Still Target Count
      disabled_by_default: true
    moving_target_count:
      name: Moving Target Count
      disabled_by_default: true
    target_1:
      x:
        name: Target-1 X
        id: target_1_x
      y:
        name: Target-1 Y
        id: target_1_y
      speed:
        name: Target-1 Speed
        disabled_by_default: true
      angle:
        name: Target-1 Angle
        id: target_1_angle
      distance:
        name: Target-1 Distance
        id: target_1_distance
        on_value:
          then:
            - script.execute: update_target1_distance
            - script.execute: wake_up_display_on_approaching
      resolution:
        name: Target-1 Resolution
        disabled_by_default: true
    target_2:
      x:
        name: Target-2 X
        id: target_2_x
      y:
        name: Target-2 Y
        id: target_2_y
      speed:
        name: Target-2 Speed
        disabled_by_default: true
      angle:
        name: Target-2 Angle
        id: target_2_angle
      distance:
        name: Target-2 Distance
        id: target_2_distance
        on_value:
          then:
            - script.execute: update_target2_distance
            - script.execute: wake_up_display_on_approaching
      resolution:
        name: Target-2 Resolution
        disabled_by_default: true
    target_3:
      x:
        name: Target-3 X
        id: target_3_x
      y:
        name: Target-3 Y
        id: target_3_y
      speed:
        name: Target-3 Speed
        disabled_by_default: true
      angle:
        name: Target-3 Angle
        id: target_3_angle
      distance:
        name: Target-3 Distance
        id: target_3_distance
        on_value:
          then:
            - script.execute: update_target3_distance
            - script.execute: wake_up_display_on_approaching
      resolution:
        name: Target-3 Resolution
        disabled_by_default: true
    zone_1:
      target_count:
        name: Zone-1 All Target Count
      still_target_count:
        name: Zone-1 Still Target Count
      moving_target_count:
        name: Zone-1 Moving Target Count
    zone_2:
      target_count:
        name: Zone-2 All Target Count
      still_target_count:
        name: Zone-2 Still Target Count
      moving_target_count:
        name: Zone-2 Moving Target Count
    zone_3:
      target_count:
        name: Zone-3 All Target Count
      still_target_count:
        name: Zone-3 Still Target Count
      moving_target_count:
        name: Zone-3 Moving Target Count

text_sensor:
  - platform: wifi_info
    ip_address:
      name: "IP Address"
      id: ip_address
      entity_category: diagnostic
      on_value:
        then:
          - lvgl.label.update:
              id: ip_address_label
              text:
                format: "%s"
                args: [ 'id(ip_address).get_state().c_str()' ]
    ssid:
      name: "Connected SSID"
      entity_category: diagnostic
    mac_address:
      name: "Mac Address"
      entity_category: diagnostic

  - platform: ld2450
    ld2450_id: ld2450_radar
    version:
      name: "LD2450 Firmware"
    mac_address:
      name: "LD2450 BT MAC"
    target_1:
      direction:
        name: "Target-1 Direction"
        id: target_1_direction
    target_2:
      direction:
        name: "Target-2 Direction"
        id: target_2_direction
    target_3:
      direction:
        name: "Target-3 Direction"
        id: target_3_direction

#-------------------------------------------
# LVGL Buttons
#-------------------------------------------
lvgl:
  id: lvgl_comp
  displays:
    - my_display
  touchscreens:
    - touchscreen_id: my_touchscreen
  on_idle:
    - timeout: 10s
      then:
        - logger.log: idle timeout
        - if:
            condition:
              lvgl.is_idle:
                timeout: 5s
            then:
              - logger.log: LVGL is idle
    - timeout: 15s
      then:
        - logger.log: idle timeout
        - light.turn_off:
            id: backlight
            transition_length: 5s
        - lvgl.pause:

  style_definitions:
    - id: style_line
      line_color: 0x0000FF
      line_width: 8
      line_rounded: true
    - id: date_style
      text_font: roboto24
      align: center
      text_color: 0x333333
      bg_opa: cover
      radius: 4
      pad_all: 2

  theme:
    button:
      text_font: roboto24
      scroll_on_focus: true
      #group: general
      radius: 25
      width: 150
      height: 109
      pad_left: 10px
      pad_top: 10px
      pad_bottom: 10px
      pad_right: 10px
      shadow_width: 0
      bg_color: 0x313131
      text_color: 0xB6B6B6
      checked:
        bg_color: 0xCC5E14
        text_color: 0xB6B6B6

  page_wrap: true
  pages:
    - id: main_page
      skip: false
      layout:
        type: grid
        grid_columns: [fr(1), fr(1), fr(1)]
        grid_rows: [fr(1), fr(1), fr(1)]
        pad_row: 5
        pad_column: 5
      width: 480
      height: 480
      bg_color: 0x000000
      bg_opa: cover
      widgets:
        - button:
            grid_cell_row_pos: 0
            grid_cell_column_pos: 0
            height: 150
            checkable: true
            id: lv_button_1
            widgets:
              - label:
                  text_font: light40
                  align: top_left
                  text: $mdi_lightbulb
                  id: lv_button_1_icon
              - label:
                  align: bottom_left
                  text: $light_1_display_name
                  long_mode: dot
            on_click:
              light.toggle: internal_light_1
        - button:
            grid_cell_row_pos: 0
            grid_cell_column_pos: 1
            height: 150
            checkable: true
            id: lv_button_2
            widgets:
              - label:
                  text_font: light40
                  align: top_left
                  text: $mdi_lightbulb
                  id: lv_button_2_icon
              - label:
                  align: bottom_left
                  text: $light_2_display_name
                  long_mode: dot
            on_click:
              light.toggle: internal_light_2
        - button:
            grid_cell_row_pos: 0
            grid_cell_column_pos: 2    
            height: 150
            checkable: true
            id: lv_button_3
            widgets:
              - label:
                  text_font: light40
                  align: top_left
                  text: $mdi_lightbulb
                  id: lv_button_3_icon
              - label:
                  align: bottom_left
                  text: $light_3_display_name
                  long_mode: dot
            on_click:
              light.toggle: internal_light_3
        - button:
            grid_cell_row_pos: 1
            grid_cell_column_pos: 0
            height: 150
            checkable: true
            id: lv_button_custom_1
            widgets:
              - label:
                  text_font: light40
                  align: top_left
                  text: $custom_switch_1_icon
                  id: lv_button_custom_1_icon
              - label:
                  align: bottom_left
                  text: $custom_switch_1_display_name
                  long_mode: dot
            on_click:
              switch.toggle: custom_switch_1
        - button:
            grid_cell_row_pos: 2
            grid_cell_column_pos: 0
            height: 150
            checkable: true
            id: lv_button_custom_2
            widgets:
              - label:
                  text_font: light40
                  align: top_left
                  text: $custom_switch_2_icon
                  id: lv_button_custom_2_icon
              - label:
                  align: bottom_left
                  text: $custom_switch_2_display_name
                  long_mode: dot
            on_click:
              switch.toggle: custom_switch_2
        - button:
            grid_cell_row_pos: 2
            grid_cell_column_pos: 1
            height: 150
            checkable: true
            id: lv_button_custom_3
            widgets:
              - label:
                  text_font: light40
                  align: top_left
                  text: $custom_switch_3_icon
                  id: lv_button_custom_3_icon
              - label:
                  align: bottom_left
                  text: $custom_switch_3_display_name
                  long_mode: dot
            on_click:
              switch.toggle: custom_switch_3
        - meter: # 시계
            grid_cell_row_pos: 1
            grid_cell_column_pos: 1
            height: 150
            width: 150
            align: center
            widgets:
            bg_opa: TRANSP
            text_color: 0xFFFFFF
            scales:
              - ticks:
                  width: 1
                  count: 61
                  length: 10
                  color: 0xFFFFFF
                range_from: 0
                range_to: 60
                angle_range: 360
                rotation: 270
                indicators:
                  - line:
                      id: minute_hand
                      value: !lambda |-
                        return id(time_comp).now().minute;
                      width: 3
                      color: 0xE0E0E0
                      r_mod: -1
              -
                angle_range: 330
                rotation: 300
                range_from: 1
                range_to: 12
                ticks:
                  width: 1
                  count: 12
                  length: 1
                  major:
                    stride: 1
                    width: 4
                    length: 8
                    color: 0xC0C0C0
                    label_gap: 6

              - angle_range: 360
                rotation: 270
                range_from: 0
                range_to: 720
                indicators:
                  - line:
                      id: hour_hand
                      value: !lambda |-
                        auto now = id(time_comp).now();
                        return std::fmod(now.hour, 12) * 60 + now.minute;
                      width: 4
                      color: 0xA0A0A0
                      r_mod: -20
        - obj:
            grid_cell_row_pos: 1
            grid_cell_column_pos: 2
            width: 150
            height: 150
            radius: 25
            widgets:
            - label:
                styles: date_style
                id: day_label
                y: -20
                text: !lambda |-
                  static const char * const day_names[] = {"SUN", "MON", "TUE", "WED", "THU", "FRI", "SAT"};
                  return day_names[id(time_comp).now().day_of_week-1];
            - label:
                styles: date_style
                id: date_label
                y: +20
                text: !lambda |-
                  static const char * const mon_names[] = {"JAN", "FEB", "MAR", "APR", "MAY", "JUN", "JUL", "AUG", "SEP", "OCT", "NOV", "DEC"};
                  static char date_buf[8];
                  auto now = id(time_comp).now();
                  snprintf(date_buf, sizeof(date_buf), "%s %2d", mon_names[now.month-1], now.day_of_month);
                  return date_buf;
        - obj:
            grid_cell_row_pos: 2
            grid_cell_column_pos: 2
            width: 150
            height: 150
            radius: 25
            on_click:
                - lvgl.page.show:
                    id: radar_page
            widgets:
            - label:
                align: TOP_LEFT
                text_font: light40
                text: $mdi_radar
            - label:
                id: ip_address_label
                align: BOTTOM_MID
                text: 'Not connected'
                text_color: ha_blue

    #-------------------------------------------
    # LD2450 실시간 레이더 추적 화면
    #-------------------------------------------
    - id: radar_page
      skip: false
      layout:
        type: grid
        grid_columns: [fr(1), fr(1), fr(1)]
        grid_rows: [fr(1), fr(1), fr(1)]
      width: 480
      height: 480
      bg_color: 0x000000
      bg_opa: cover
      widgets:
        - obj:
            grid_cell_row_pos: 0
            grid_cell_column_pos: 0
            grid_cell_row_span: 3
            grid_cell_column_span: 3
            width: 480
            height: 480
            border_width: 0
            bg_opa: TRANSP
            widgets:
              # 원점
              - obj:
                  width: 10
                  height: 10
                  align: TOP_MID
                  bg_color: 0xFFFFFF
                  bg_opa: cover
                  radius: 5
              # 거리 표시 원
              - obj:
                  width: 900
                  height: 900
                  align: TOP_MID
                  bg_opa: TRANSP
                  border_width: 1
                  border_color: 0xFFFFFF
                  radius: 450
                  translate_y: -450
              - obj:
                  width: 675
                  height: 675
                  align: TOP_MID
                  bg_opa: TRANSP
                  border_width: 1
                  border_color: 0xFFFFFF
                  radius: 338
                  translate_y: -338
              - obj:
                  width: 450
                  height: 450
                  align: TOP_MID
                  bg_opa: TRANSP
                  border_width: 1
                  border_color: 0xFFFFFF
                  radius: 225
                  translate_y: -225
              - obj:
                  width: 225
                  height: 225
                  align: TOP_MID
                  bg_opa: TRANSP
                  border_width: 1
                  border_color: 0xFFFFFF
                  radius: 113
                  translate_y: -113
              # 거리 표시 텍스트
              - label:
                  text: "6m"
                  text_color: 0xFFFFFF
                  align: TOP_MID
                  translate_y: 430
              - label:
                  text: "4.5m"
                  text_color: 0xFFFFFF
                  align: TOP_MID
                  translate_y: 318
              - label:
                  text: "3m"
                  text_color: 0xFFFFFF
                  align: TOP_MID
                  translate_y: 205
              - label:
                  text: "1.5m"
                  text_color: 0xFFFFFF
                  align: TOP_MID
                  translate_y: 93
              # 타겟 1
              - obj:
                  id: target1_obj
                  width: 100
                  height: 100
                  align: TOP_MID
                  bg_opa: TRANSP
                  y: -10
                  translate_x: 0
                  translate_y: 0
                  border_width: 0
                  widgets:
                    - obj:
                        id: target1_obj_dot
                        width: 20
                        height: 20
                        align: TOP_MID
                        bg_color: 0xFF0000
                        bg_opa: cover
                        radius: 10
                    - label:
                        id: target1_obj_distance
                        text: "---"
                        text_color: 0xFFFFFF
                        align: TOP_MID
                        y: +20
              # 타겟 2
              - obj:
                  id: target2_obj
                  width: 100
                  height: 100
                  align: TOP_MID
                  bg_opa: TRANSP
                  y: -10
                  translate_x: 0
                  translate_y: 0
                  border_width: 0
                  widgets:
                    - obj:
                        id: target2_obj_dot
                        width: 20
                        height: 20
                        align: TOP_MID
                        bg_color: 0x00FF00
                        bg_opa: cover
                        radius: 10
                    - label:
                        id: target2_obj_distance
                        text: "---"
                        text_color: 0xFFFFFF
                        align: center
                        y: +20
              # 타겟 3
              - obj:
                  id: target3_obj
                  width: 100
                  height: 100
                  align: TOP_MID
                  bg_opa: TRANSP
                  y: -10
                  translate_x: 0
                  translate_y: 0
                  border_width: 0
                  widgets:
                    - obj:
                        id: target3_obj_dot
                        width: 20
                        height: 20
                        align: TOP_MID
                        bg_color: 0x0000FF
                        bg_opa: TRANSP
                        radius: 10
                    - label:
                        id: target3_obj_distance
                        text: "---"
                        text_color: 0xFFFFFF
                        align: center
                        y: +20
        
        # 뒤로 가기 버튼
        - button:
            grid_cell_row_pos: 0
            grid_cell_column_pos: 0
            height: 70
            checkable: false
            id: radar_go_to_prev
            widgets:
              - label:
                  text_font: light40
                  align: top_left
                  text: $mdi_chevron_double_left
                  id: radar_go_to_prev_icon
            on_click:
              - lvgl.page.show:
                  id: main_page

#-------------------------------------------
# Internal outputs
#-------------------------------------------
output:
  # Backlight LED
  - platform: ledc
    pin: GPIO38
    id: GPIO38
    frequency: 100Hz

    # Built in 240v relay
  - id: internal_relay_1
    platform: gpio
    pin: 40

    # Additional relays (3 relay model)
  - id: internal_relay_2
    platform: gpio
    pin: 2
  - id: internal_relay_3
    platform: gpio
    pin: 1

#-------------------------------------------
# Internal lights
#-------------------------------------------
light:
  - platform: monochromatic
    output: GPIO38
    name: Backlight
    id: backlight
    restore_mode: ALWAYS_ON

  - platform: binary
    output: internal_relay_1
    name: Internal Light_1
    id: internal_light_1
    on_turn_on:
      then:
        - lvgl.widget.update:
            id: lv_button_1_icon
            text_color: 0xFFFF00
        - lvgl.widget.update:
            id: lv_button_1
            state:
              checked: true
    on_turn_off:
      then:
        - lvgl.widget.update:
            id: lv_button_1_icon
            text_color: 0xB6B6B6
        - lvgl.widget.update:
            id: lv_button_1
            state:
              checked: false

  - platform: binary
    output: internal_relay_2
    name: Internal Light_2
    id: internal_light_2
    on_turn_on:
      then:
        - lvgl.widget.update:
            id: lv_button_2_icon
            text_color: 0xFFFF00
        - lvgl.widget.update:
            id: lv_button_2
            state:
              checked: true
    on_turn_off:
      then:
        - lvgl.widget.update:
            id: lv_button_2_icon
            text_color: 0xB6B6B6
        - lvgl.widget.update:
            id: lv_button_2
            state:
              checked: false
  - platform: binary
    output: internal_relay_3
    name: Internal Light_3
    id: internal_light_3
    on_turn_on:
      then:
        - lvgl.widget.update:
            id: lv_button_3_icon
            text_color: 0xFFFF00
        - lvgl.widget.update:
            id: lv_button_3
            state:
              checked: true
    on_turn_off:
      then:
        - lvgl.widget.update:
            id: lv_button_3_icon
            text_color: 0xB6B6B6
        - lvgl.widget.update:
            id: lv_button_3
            state:
              checked: false

#-------------------------------------------
# Touchscreen gt911 i2c
#-------------------------------------------
i2c:
  - id: bus_a
    sda: GPIO19
    scl: GPIO45
    #frequency: 100kHz

touchscreen:
  platform: gt911
  transform:
    mirror_x: false
    mirror_y: false
  id: my_touchscreen
  display: my_display

  on_touch:
    - logger.log:
        format: Touch at (%d, %d)
        args: [touch.x, touch.y]
    - lambda: |-
        ESP_LOGI("cal", "x=%d, y=%d, x_raw=%d, y_raw=%0d",
            touch.x,
            touch.y,
            touch.x_raw,
            touch.y_raw
            );
  on_release:
    then:
      - script.execute: wake_up_display
#-------------------------------------------
# Display st7701s spi
#-------------------------------------------
spi:
  - id: lcd_spi
    clk_pin: GPIO48
    mosi_pin: GPIO47

display:
  - platform: st7701s
    id: my_display
    update_interval: never
    auto_clear_enabled: False
    spi_mode: MODE3
    data_rate: 2MHz
    color_order: RGB
    invert_colors: False
    dimensions:
      width: 480
      height: 480
    cs_pin: 39
    de_pin: 18
    hsync_pin: 16
    vsync_pin: 17
    pclk_pin: 21
    pclk_frequency: 12MHz
    pclk_inverted: False
    hsync_pulse_width: 8
    hsync_front_porch: 10
    hsync_back_porch: 20
    vsync_pulse_width: 8
    vsync_front_porch: 10
    vsync_back_porch: 10
    init_sequence:
      - 1
      # Custom sequences are an array, first byte is command, the rest are data.
      - [0xFF, 0x77, 0x01, 0x00, 0x00, 0x10] # CMD2_BKSEL_BK0
      - [0xCD, 0x00] # disable MDT flag
    data_pins:
      red:
        - 11 #r1
        - 12 #r2
        - 13 #r3
        - 14 #r4
        - 0 #r5
      green:
        - 8 #g0
        - 20 #g1
        - 3 #g2
        - 46 #g3
        - 9 #g4
        - 10 #g5
      blue:
        - 4 #b1
        - 5 #b2
        - 6 #b3
        - 7 #b4
        - 15 #b5

#-------------------------------------------
# LD2450 RADAR
#-------------------------------------------
uart:
  id: uart_ld2450
  tx_pin: GPIO43
  rx_pin: GPIO44
  baud_rate: 256000
  parity: NONE
  stop_bits: 1
  debug:

ld2450:
  id: ld2450_radar
  uart_id: uart_ld2450
  throttle: 1000ms

binary_sensor:
  - platform: ld2450
    ld2450_id: ld2450_radar
    has_target:
      name: Presence
    has_moving_target:
      name: Moving Target
    has_still_target:
      name: Still Target

number:
  - platform: ld2450
    ld2450_id: ld2450_radar
    presence_timeout:
      name: "Timeout"
    zone_1:
      x1:
        name: Zone-1 X1
      y1:
        name: Zone-1 Y1
      x2:
        name: Zone-1 X2
      y2:
        name: Zone-1 Y2
    zone_2:
      x1:
        name: Zone-2 X1
      y1:
        name: Zone-2 Y1
      x2:
        name: Zone-2 X2
      y2:
        name: Zone-2 Y2
    zone_3:
      x1:
        name: Zone-3 X1
      y1:
        name: Zone-3 Y1
      x2:
        name: Zone-3 X2
      y2:
        name: Zone-3 Y2

switch:
  - platform: ld2450
    ld2450_id: ld2450_radar
    bluetooth:
      name: "Bluetooth"
    multi_target:
      name: "Multi Target Tracking"
  - platform: template
    id: custom_switch_1
    name: custom_switch_1
    optimistic: True
    on_turn_on:
      then:
        - lvgl.widget.update:
            id: lv_button_custom_1_icon
            text_color: 0xFFFF00
        - lvgl.widget.update:
            id: lv_button_custom_1
            state:
              checked: true
    on_turn_off:
      then:
        - lvgl.widget.update:
            id: lv_button_custom_1_icon
            text_color: 0xB6B6B6
        - lvgl.widget.update:
            id: lv_button_custom_1
            state:
              checked: false
  - platform: template
    id: custom_switch_2
    name: custom_switch_2
    optimistic: True
    on_turn_on:
      then:
        - lvgl.widget.update:
            id: lv_button_custom_2_icon
            text_color: 0xFFFF00
        - lvgl.widget.update:
            id: lv_button_custom_2
            state:
              checked: true
    on_turn_off:
      then:
        - lvgl.widget.update:
            id: lv_button_custom_2_icon
            text_color: 0xB6B6B6
        - lvgl.widget.update:
            id: lv_button_custom_2
            state:
              checked: false
  - platform: template
    id: custom_switch_3
    name: custom_switch_3
    optimistic: True
    on_turn_on:
      then:
        - lvgl.widget.update:
            id: lv_button_custom_3_icon
            text_color: 0xFFFF00
        - lvgl.widget.update:
            id: lv_button_custom_3
            state:
              checked: true
    on_turn_off:
      then:
        - lvgl.widget.update:
            id: lv_button_custom_3_icon
            text_color: 0xB6B6B6
        - lvgl.widget.update:
            id: lv_button_custom_3
            state:
              checked: false

select:
  - platform: ld2450
    ld2450_id: ld2450_radar
    baud_rate:
      name: "Baud rate"
    zone_type:
      name: "Zone Type"

button:
  - platform: ld2450
    ld2450_id: ld2450_radar
    factory_reset:
      name: "LD2450 Factory Reset"
      entity_category: "config"
    restart:
      name: "LD2450 Restart"
      entity_category: "config"

interval:
  - interval: 0.5s
    then:
      if:
        condition:
          lvgl.page.is_showing: radar_page
        then:
          - script.execute: update_radar_targets